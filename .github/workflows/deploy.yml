name: Deploy Profile Service

on:
  push:
    branches:
      - master

env:
  SERVICE_NAME: profile-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install

      - name: Compile and package Lambda functions
        run: bash ./.github/package-lambdas.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.MARHABA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MARHABA_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload Lambda packages to S3
        run: |
          for file in dist/*.zip; do
            aws s3 cp "$file" s3://${{ secrets.LAMBDA_CODE_BUCKET_NAME }}/${{ env.SERVICE_NAME }}/
          done

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file ./infrastructure.yml \
            --stack-name profile-service \
            --capabilities CAPABILITY_NAMED_IAM 

      - name: Create API Gateway Deployment
        run: |
          echo "Creating API Gateway deployment"
          API_ID=$(aws cloudformation describe-stacks --stack-name profile-service --query "Stacks[0].Outputs[?OutputKey=='ProfileApiId'].OutputValue" --output text)
          aws apigateway create-deployment --rest-api-id $API_ID --stage-name prod

      - name: Post-deployment verification
        run: |
          aws cloudformation describe-stacks --stack-name profile-service
